---
import BaseLayout from "../../layouts/Layout.astro";
import Footer from "../../sections/Footer/index.astro";
import NewsletterSection from "../../sections/callToActionSections/NewsletterSection/index.astro";
import MdxPostHeader from "../../components/blog/BlogComponents/MdxPostHeader.astro";
import type { MDXInstance } from "astro";
import type { BlogPostFrontmatter, Pathname } from "../../types/blog";

import Header2 from "../../components/blog/Header2.astro";
import Header3 from "../../components/blog/Header3.astro";
import Header4 from "../../components/blog/Header4.astro";
import Paragraph from "../../components/blog/Paragraph.astro";
import CodeCallout from "../../components/blog/CodeCallout.astro";
import PostImage from "../../components/blog/PostImage.astro";

interface Route {
  params: {
    now: string;
  };
  props: {
    data: BlogPostFrontmatter;
    now: MDXInstance<Record<string, any>>;
  };
}

interface Params {
  [index: string]: string;
}

export async function getStaticPaths() {
  const posts = await Astro.glob("../../data/now/*.mdx");

  const routes = posts.map((post) => {
    const frontmatter = post.frontmatter as BlogPostFrontmatter;

    return {
      params: { now: frontmatter.slug },
      props: {
        data: frontmatter,
        now: post,
      },
    };
  });

  return routes;
}

const params = Astro.params as Params;

let breadcrumbs: Pathname[] = [];

for (const p in params) {
  const pathname = {
    base: [p],
    slug: params[p],
  };
  breadcrumbs.push(pathname);
}

const {
  headline,
  seoTitle,
  seoDescription,
  headerImageUrl,
  altTag,
  titleTag,
  category,
  tags,
} = Astro.props.data as BlogPostFrontmatter;
const { Content } = Astro.props.now;
---

<BaseLayout title={seoTitle}>
  <div class="container">
    <MdxPostHeader
      imageUrl={headerImageUrl}
      altTag={altTag}
      titleTag={titleTag}
      headline={headline}
      category={category}
      tags={tags}
      paths={breadcrumbs}
    />
    <div class="galaxy"></div>
    <div class="post-body">
      <Content
        components={{
          h2: Header2,
          h3: Header3,
          h4: Header4,
          p: Paragraph,
          em: CodeCallout,
          img: PostImage,
        }}
      />
    </div>
  </div>
  <NewsletterSection />
  <Footer />
</BaseLayout>

<style lang="scss">
  @import "../../styles/sizes.scss";

  .container {
    position: relative;
    padding: 0 0 80px 0;
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-rows: min-content;
    gap: 80px;
    justify-items: center;
    width: 100%;
    isolation: isolate;

    @include aboveTablet {
      padding: 0 0 120px 0;
    }
  }

  .post-body {
    padding: 0 12px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    width: 100%;

    @include aboveMobile {
      width: 660px;
    }

    @include aboveTablet {
      width: 800px;
    }
  }

  .galaxy {
    position: absolute;
    top: 0;
    left: 0;
    background-color: #3d00bd;
    border-radius: 50%;
    width: 220px;
    height: 220px;
    filter: blur(160px);
    transform: translate(0, 260px);
    z-index: -1;

    @include aboveMobile {
      transform: translate(40px, 360px);
    }

    @include aboveTablet {
      width: 300px;
      height: 300px;
      filter: blur(260px);
      transform: translate(40px, 420px);
    }
  }
</style>
