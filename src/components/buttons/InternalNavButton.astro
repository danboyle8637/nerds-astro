---
import NerdChatIcon from "../svgs/NerdChatIcon.astro";
import type { ThemeColor } from "../../types/components";

interface Props {
  type: ThemeColor;
  slug: string;
  title: string;
  width?: number;
  cta?: boolean;
}

const { slug, title, type, width, cta = true } = Astro.props as Props;

const buttonLayout = cta ? "min-content 1fr" : "1fr";
const buttonLabelColor =
  type === "teal" ? "var(--accent-teal-dark)" : "var(--font-color-light)";
const backgroundColor =
  type === "teal"
    ? "var(--accent-teal)"
    : type === "pink"
    ? "var(--accent-pink)"
    : "var(--accent-purple)";
const shadowColor =
  type === "teal"
    ? "var(--accent-purple-dark)"
    : type === "pink"
    ? "var(--accent-pink-dark)"
    : "var(--accent-purple-dark)";
const buttonWidth = width ? `${width}px` : "100%";
const focusOutline =
  type === "teal" ? "var(--accent-purple)" : "var(--accent-teal)";
---

<div class="container">
  <a href={slug} title={title}>
    {
      cta ? (
        <div class="chat-icon">
          <NerdChatIcon />
        </div>
      ) : null
    }
    <slot>Learn More</slot>
  </a>
  <div class="shadow"></div>
</div>

<style
  lang="scss"
  define:vars={{
    buttonLayout,
    buttonLabelColor,
    backgroundColor,
    shadowColor,
    buttonWidth,
    focusOutline,
  }}
>
  @import "../../styles/sizes.scss";

  .container {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    justify-items: center;
    align-items: center;
    width: var(--buttonWidth);
  }

  a {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
    padding: 12px 14px;
    display: grid;
    grid-template-columns: var(--buttonLayout);
    gap: 8px;
    justify-items: center;
    align-items: center;
    font-size: 2rem;
    font-weight: 700;
    color: var(--buttonLabelColor);
    text-decoration: none;
    line-height: 1;
    background-color: var(--backgroundColor);
    border: none;
    border-radius: 12px;
    width: var(--buttonWidth);
    height: 60px;
    z-index: 1;
    transition: box-shadow, transform, 300ms ease-in-out;

    &:focus {
      color: var(--buttonLabelColor);
      outline-offset: 6px;
      outline: 4px solid var(--focusOutline);
    }

    &:hover {
      color: var(--buttonLabelColor);
      box-shadow: 1px 2px 4px 1px hsla(0, 0%, 0%, 0.4);
      transform: translate(-8px, -8px);
    }

    &:visited {
      color: var(--buttonLabelColor);
    }

    &:visited:hover {
      color: var(--buttonLabelColor);
    }
  }

  .chat-icon {
    width: 46px;
  }

  .shadow {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
    background-color: var(--shadowColor);
    border-radius: 12px 8px 16px 8px;
    width: 98%;
    height: 90%;
  }
</style>
