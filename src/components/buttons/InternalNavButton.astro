---
import type { InternalButtonColor } from '../../types/components'

interface Props {
  type: InternalButtonColor
  slug: string
  title: string
  width: number
}

const { slug, title, type, width = 290 } = Astro.props as Props

const buttonStyles = {
  "--button-label-color": type === "teal" ? "var(--accent-teal-dark)" : type === "pink" ? "#f8f8f8" : "#f8f8f8",
  "--background-color": type === "teal" ? "var(--accent-teal)" : type === "pink" ? "var(--accent-pink)" : "var(--accent-purple)",
  "--shadow-color": type === "teal" ? "var(--accent-purple-dark)" : type === "pink" ? "var(--accent-pink-dark)" : "var(--accent-purple-dark)",
  "--button-width": `${width}px`,
}
---

<a href={slug} title={title} style={buttonStyles}> 
  <div class="button">
    <slot>Learn More</slot>
  </div>
  <div class="shadow" />
</a>

<style>
  a {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    justify-items: center;
    align-items: center;
    font-size: 2.6rem;
    font-weight: 700;
    color: var(--button-label-color);
    text-decoration: none;
    outline: none;
    width: var(--button-width);
    height: 60px;
  }

  .button {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--background-color);
    border: none;
    border-radius: 12px;
    width: 100%;
    height: 100%;
    z-index: 1;
    transition: box-shadow, transform, 200ms ease-in-out;
  }

  .button:hover {
    box-shadow: 1px 1px 12px 1px var(--accent-purple);
    transform: translate(-10px, -10px);
  }

  .button:focus {

  }

  .shadow {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
    background-color: var(--shadow-color);
    border-radius: 12px 12px 18px 12px;
    width: var(--button-width);
    height: 100%;
  }
</style>